///| Test the OpenTUI FFI integration

test "create_renderer" {
  // Try to create a renderer
  match Renderer::new(80, 24) {
    Some(renderer) => {
      println("✓ Successfully created renderer")
      
      // Set background color
      renderer.set_background_color(0.1, 0.1, 0.1, 1.0)
      println("✓ Set background color")
      
      // Get buffers
      let next_buf = renderer.get_next_buffer()
      println("✓ Got next buffer: \{next_buf.width}x\{next_buf.height}")
      
      let current_buf = renderer.get_current_buffer()
      println("✓ Got current buffer: \{current_buf.width}x\{current_buf.height}")
      
      // Clean up
      renderer.destroy()
      println("✓ Renderer destroyed")
    }
    None => {
      println("✗ Failed to create renderer")
      assert_eq(1, 0) // Force test failure
    }
  }
}

test "create_buffer" {
  match Buffer::new(80, 24) {
    Some(buffer) => {
      println("✓ Created buffer: \{buffer.width}x\{buffer.height}")
      
      // Clear with a color
      buffer.clear(0.0, 0.0, 0.0, 1.0)
      println("✓ Cleared buffer")
      
      // Draw some text
      buffer.draw_text("Hello from MoonBit FFI!", 10, 5, bold=true)
      println("✓ Drew text")
      
      // Fill a rectangle
      buffer.fill_rect(0, 0, 10, 3, 0.2, 0.2, 0.8, 1.0)
      println("✓ Filled rectangle")
      
      // Clean up
      buffer.destroy()
      println("✓ Buffer destroyed")
    }
    None => {
      println("✗ Failed to create buffer")
      assert_eq(1, 0)
    }
  }
}

test "cursor_control" {
  // Test cursor functions
  set_cursor_position(10, 5, visible=false)
  println("✓ Set cursor position")
  
  set_cursor_style("block", blinking=false)
  println("✓ Set cursor style")
  
  set_cursor_color(1.0, 0.0, 0.0, 1.0)
  println("✓ Set cursor color")
}